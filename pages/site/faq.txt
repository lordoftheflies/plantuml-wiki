<nodisp>TITLE: Frequently Asked Questions</nodisp>
<nodisp>DESC: This pages lists some very common questions about PlantUML. Please read it first before sending us mail or asking your question on the forum.</nodisp>

====== F.A.Q. ======

===== What's the goal of PlantUML ? =====

**PlantUML** is used to //draw// UML diagrams, using a simple and human readable text description.\\
Be careful, because it does not prevent you from drawing inconsistent diagrams (such as having two classes inheriting from each other, for example).
So it's more a **drawing** tool than a **modeling** tool.

===== How long do the images generated by PlantUML Server live for? =====

Links to png or svg generated by [[http://www.plantuml.com/plantuml|PlantUML Server]] are valid forever (that is as long as the server is up).\\
However, we do **not** store any diagrams on our servers.

This may sound contradictory. It is not: the whole diagram is [[text-encoding|compressed into the URL itself]]. When the server receives the URL, it decompresses the URL to retrieve the diagram text and generates the image. There is no need to store anything. Even if the server is down, you can retrieve the diagram using the flag ''-decodeurl'' with the [[command-line|command line]]. Furthermore, the diagram data is stored in PNG metadata, so you can fetch it even from a downloaded image.

Occasionally we may activate HTTP traces on our server. This is mainly for performance issues (when we have some) to understand the traffic we get. Once the issue solved, we turn back off HTTP traces and we remove the logs.

Note that we are also counting the number of diagrams generated (printed at the home page) to measure general server load.

Concerning sensitive content: even if we do not store the generated diagrams, please be aware that all traffic goes through HTTP, so it's easy to catch.

So you should probably install [[server|a local server]] on your own network if you plan to generate diagrams with sensitive information.

===== It does not work on my config ! =====

**PlantUML** has been installed on various systems, and some users have reported minor issues when installing it.\\
You can have a look [[faq-install|on this page]] which give advises if something is wrong.

===== Which version of Graphviz should I use ? =====

You have more information about Graphviz [[graphviz-dot|here]] and a quick test to do [[graphviz-dot#test|here]].

PlantUML should be working with any version of Graphviz, starting with **2.26.3**

The following version have been tested, and are known to work:

  * 2.26.3
  * 2.28
  * 2.30.1
  * 2.34
  * 2.36
  * 2.38

Note that versions 2.39 and 2.40 [[http://plantuml.sourceforge.net/qa/?qa=4531/possible-bug-with-relation-in-rectangle-screenshot|do not work very well with PlantUML]].

If you compile Graphviz by yourself, you have to build it with //libexpat// in order to work with PlantUML.

===== Is this mature? I don't see any new release ? =====

[[https://www.google.com/trends/explore#q=plantuml|Google Trends]] are somehow positive. And there are [[https://www.google.com/search?tbm=bks&q=plantuml|few books that mention PlantUML]]. So yes, it's mature.

Note that **PlantUML** is developed with [[http://en.wikipedia.org/wiki/Continuous_integration|continuous integration]] in mind. That means that there are new releases quite often, with (hopefully!) backward compatibility. So the file **PlantUML.jar** may changed over time, while keeping the same name.

If you want to know the exact version you are using, you can type in the command line:

	java -jar plantuml.jar -version
	

or use the following small special diagram description :

	@startuml
	version
	@enduml

===== How to know if a new release is available ? =====

To check if a newer version is available for download, you can go to [[download|the download page]].

You can also subscribe to the following rss flows:

  * [[http://forum.plantuml.net/feed/activity.rss|Recent activities on the Q&A forum]]
  * [[http://forum.plantuml.net/feed/qa.rss|Recent questions and answers on the Q&A forum]]

Or you can use the command line:

	java -jar plantuml.jar -checkversion	

This command connects to the PlantUML website, so you may have to set your proxy :\\
(Please note that -D flags must be set before -jar flag)

	java -Dhttp.proxyHost=myproxy.com -Dhttp.proxyPort=8080 -jar plantuml.jar -checkversion	

Or use the following small special diagram description :

	@startuml
	checkversion
	@enduml
	

You can also set your proxy using the following syntax :

	@startuml
	checkversion(proxy=myproxy.com,port=8080)
	@enduml
	

===== I have an error message with the Eclipse Plugin. =====

If you have the following error message :

	The currently displayed page contains invalid values

when displaying the Windows/Preferences/PlantUML, you should try to quit [[eclipse|Eclipse]] and use the ''-clean'' flag on the command line:

    eclipse -clean

===== I want to generate huge diagrams! =====

PlantUML limits image width and height to 4096. There is a environment variable that you can set to override this limit: ''PLANTUML_LIMIT_SIZE''. You have to define this variable before launching PlantUML, something like:

	set PLANTUML_LIMIT_SIZE=8192

or

	setenv PLANTUML_LIMIT_SIZE 8192

Another way is an option in the command line:

	java -DPLANTUML_LIMIT_SIZE=8192 -jar /path/to/plantuml.jar ...

Note that if you generate **very** big diagrams, (for example, something like 20 000 x 10 000 pixels), you can have some memory issues. The solution is to add this parameter to the java vm : [[http://javahowto.blogspot.com/2006/06/6-common-errors-in-setting-java-heap.html|-Xmx1024m]].

===== I have issues with accented characters. =====

Characters encoding is a subtle thing... By default, PlantUML use the default charset of your platform, which may or may not be UTF-8 . If you want to know which charset you are using, you can type the following command:

	java -jar plantuml.jar -help
	
	...
	-charset xxx To use a specific charset (default is windows-1252)
	...

If you want to use a different charset, for example UTF-8, you can use the ''-charset'' flag :

	java -jar plantuml.jar -charset UTF-8 ...
	

You can also find [[unicode|here information about unicode]] . Note that even if Java [[http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058|does not support B.O.M. (Byte Order Mark) in UTF-8 format file]], a workaround has been put into PlantUML, so this should not be an issue.

===== I have issues with Asian characters. =====

Some Japanese users reported that they have to set the ''LANG'' variable to ''ja_JP.UTF-8'' in their shell before launching PlantUML.

	export LANG = ja_JP.UTF-8

Since [[svek|the new architecture]], it should simply work, because Java knows how to draw East Asian characters.

===== How to generate EPS ? =====

You can use the ''-eps'' flag in the command line, or ''%%format="eps"%%'' in [[ant|the ANT task]].
===== What about XMI ? =====

Work is [[xmi|in progress]].

===== Is @startuml needed in with -pipe flag ? =====

__Short answer__: You **do** have to use @startuml (or @startditaa/@startjcckit...) when starting a diagram.

__Long answer__:

The @startuml/@startditaa/@startjcckit is useful to determine the type of diagram (uml, ditaa, jcckit...), and because you can optionally put a filename after the @startXXX. This also allows to have several diagrams inside the same file.

Earlier versions of PlantUML were not supporting ditaa or jcckit. When you use [[command-line#pipe|-pipe]] flag, since the diagram is generated to standard output, there could be only one diagram in the standard input. And there is no need to specify a filename. For all those reasons, @startuml was not needed when using [[command-line#pipe|-pipe]] flag at that time.

Latter, it has been decided to normalize this, and to impose @startXXX everywhere, even with [[command-line#pipe|-pipe]] flag, because it was confusing for users. Unfortunately, since some existing scripts were already using the fact that @startuml is not needed in [[command-line#pipe|-pipe]] flag, it has been decided to keep this as a //deprecated// option, just to allow older scripts to run. We indeed do pay attention of ascending compatibility.

For newer scripts, you should not rely on this, and use @startXXX/@endXXX with the [[command-line#pipe|-pipe]] flag.

===== Under which license is PlantUML distributed ? =====

PlantUML is distributed under the [[http://www.gnu.org/copyleft/gpl.html|GPL license]].\\
You can print the license using the command line option:

	java -jar plantuml.jar -license

Or you can use the special diagram:

	@startuml
	license
	@enduml


===== I don't like GPL! =====

You can also use:

  * [[download#lgpl|LGPL license]]
  * [[download#asl|Apache license]]
  * [[download#epl|Eclipse Public license]]
  * [[download#mit|MIT license]]

Those versions miss few features ([[ditaa|DITAA]] for example), but are 100% able to generate UML diagrams.

You can print the license of these versions using the command line option:

	java -jar plantuml.jar -license

Or you can use the special diagram:

	@startuml
	license
	@enduml


===== Are images generated by PlantUML covered by the GPL/LGPL/ASL/EPL/MIT license ? =====

No, they are not.

Images (whatever their format : PNG, SVG...) generated by the **execution** of PlantUML are owned by the author of their corresponding sources code (that is, their textual description in PlantUML language).

Images generated by the **execution** of PlantUML **are not** considered as //covered work//. You can do whatever you want with them.

The generated images can then be used without any reference to the GPL/LGPL/ASL/EPL/MIT license. It is not even necessary to stipulate that they have been generated with PlantUML, although this will be appreciate by PlantUML team.

There is an exception : if the textual description in PlantUML language is also covered by some license (like the GPL/LGPL/ASL/EPL/MIT), then the generated images are logically covered by this license.

===== Can I redistribute the LGPL binary file PlantUML.jar and if there any constraints about it? =====

As long as you do not modify the Java source code and the jar file, you can integrate PlantUML.jar in your own closed source software.

The only constraint is that you have to mention somewhere in your own license or in your documentation that you are using PlantUML and that PlantUML is distributed under LGPL.

You can then even sell your software and earn money, without any other constraints (although [[donors|donation will be appreciate]] in that case '':-)''

===== What it the license of the PlantUML syntax? =====

There are no license for the PlantUML syntax itself : this means that everybody can use it.

So you can use PlantUML comments into your own code : **those comments are owned by yourself**, and are not considered as //covered work//, and are not covered by the GPL/LGPL/APL/EPL/MIT license.

Only the current implementation (that is, PlantUML program) is licensed under GPL, LGPL, ASL, EPL or MIT. On the other hand note that the documentation (examples, notices, ...) published in the PlantUML website is copyrighted. But you can still write your own documentation.


===== I have a message "file not found" when running the Word Macro with Java 7! =====

You may have to properly set Environment Variables. To fix go into Windows Environment Variables settings and find these two variables:

Variable Name: ''PATH'', Add to Value: '';C:\Program Files\Java\jre7\bin''\\
Variable Name: ''CLASSPATH'', Add to Value: '';C:\Program Files\Java\jre7\lib''

If they do not exist, create new User Variables:

Variable Name: ''PATH'', Add to Value: ''.;C:\Program Files\Java\jre7\bin.;''\\
Variable Name: ''CLASSPATH'', Add to Value: ''.;C:\Program Files\Java\jre7\lib.;''

===== What does net.sourceforge.plantuml.svek.EmptySvgException mean ? =====

PlantUML is using [[graphviz-dot|Graphviz]] to generate some diagrams. So PlantUML is launching //dot// program and retrieve the information generated by //dot// as a SVG flow.

This message means that PlantUML is getting an empty flow from //dot// execution, and therefore cannot generate UML diagrams. There may be several reasons why this happens:

  * There is an issue with your Graphviz installation. Try a very simple diagram, with only one class for example.
  * Your version of Graphviz is too old and is crashing with information provided by PlantUML. Check your version with ''testdot''
  * Your diagram is too complex.
  * There is a bug in PlantUML and/or in //dot//.


===== I have a message complaining about X11 or headless! =====

If you are running PlantUML on a linux server without graphical capability, you may have some error message:

  * Can't connect to X11 window
  * X11 connection rejected because of wrong authentication.
  * HeadlessException


Basically, this is because PlantUML needs to have access to some graphical resources (more [[http://www.oracle.com/technetwork/articles/javase/headless-136834.html|information here]]).
You can turn PlantUML to headless mode, using the flag ''-Djava.awt.headless=true''.
For example:
	/usr/bin/java -Djava.awt.headless=true -jar /data/PlantUml/plantuml.jar ...

===== I have an UnsatisfiedLinkError under Mac OS X ! =====

Under Mac OS X, if you have some error message like:
	Error java.lang.UnsatisfiedLinkError / liblwawt.dylib /libosxapp.dylib

You need to follow the instructions on [[http://stackoverflow.com/questions/25914757/osx-yosemite-jvm-shared-library-does-not-contain-the-jni-createjavavm-symbol|http://stackoverflow.com/questions/25914757/osx-yosemite-jvm-shared-library-does-not-contain-the-jni-createjavavm-symbol]]:

  - Download and install the package: JavaForOSX.
  - Found the file ''AptanaStidio3.ini'', the file by default located under the directory here: ''/Applications/Aptana Studio 3/AptanaStudio3.app/Contents/MacOS''
  - Add ''-vm'' argument to specify the java which will be used to lunch Aptana Studio: ''-vm /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/bin/java''

This seems to work only under Java 6, so you may define the following alias to be used in your scripts.
	alias java6="export JAVA_HOME=$(/usr/libexec/java_home -v 1.6.0)"

===== PlantUML scripts are grabbing keyboard/window focus! =====

Depending on your configuration, you can try the flag ''-Djava.awt.headless=true''.\\
For example:
	/usr/bin/java -Djava.awt.headless=true -jar /path/to/plantuml.jar ...

===== I have a question that is not here! =====

You can use the [[http://forum.plantuml.net|forum]] facility.

Someone will try to answer your question there. 